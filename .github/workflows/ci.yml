name: Build Docker Image and Comment on PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-comment:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t my-rust-app .

      # Extract PR number and content
      - name: Extract PR number and content
        id: pr-info
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            return {
              number: context.payload.pull_request.number,
              body: pr.body || "",
            };

      # Run the Rust code to process the PR content
      - name: Run Rust code
        run: |
          docker run --rm my-rust-app \
            --pr-number ${{ steps.pr-info.outputs.number }} \
            --pr-body "${{ steps.pr-info.outputs.body }}" \
            --github-token ${{ secrets.GITHUB_TOKEN }}

      # Post the result as a comment on the PR
      - name: Post comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comment } = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr-info.outputs.number }},
              body: `Fibonacci results:\n${process.env.FIB_RESULTS}`,
            });